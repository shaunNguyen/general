Dockerfiles :
=============
https://docs.docker.com/engine/reference/builder/
Docker can build images automatically by reading the instrcutions from a Dockerfile. 
A Dockerfile is a text document that contains all the commands a user could call on the command line
to assemble an inmage. 
Using docker build users can create an automatied build that executes serveral command-line instrcutions 
in succession.

Usage : 
the docker build command builds an image from a Dockerfile and a context. the build's context is the set
of files at a specified location PATH or URL 
	PATH : is a directory on your localfylesystem
	URL : is a git repo
The build is run by the Docker deamon, not by the CLI. The first thing a build process dose is send the 
entire context to the deamon. 
In most cases, it's best to start with an empty directory as context and keep your Dockerfile in that 
dir. Add only the files needed for building the Dockerfile
To use a file in the build context, the Dockerfile refers to the file to the specified in an instruction, 
for example :
	COPY instruction
noted : dockerignore file

Format:
	INSTRUCTION arguments 
1.FROM 
	FROM [--platform=<platform>] <image> [AS <name>]
	FROM [--platform=<platform>] ...
the FROM initializes a new build stage and sets the Base image for subsequent instructions. As such, a valid 
Dockerfile must start with a FROM 

2. RUN 
	RUN <command> ( shell form, he command is run in a shell)
	RUN ["executable", "param1", "param2"] ( exec form)

3.ENTRYPOINT 
the best use for ENTRYPOINT is to set the images's main command, allowing that image to be run as though it 
was that command( then use CMD as the default flags) 
